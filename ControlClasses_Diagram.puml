@startuml
interface IRepository {
    +ApplicationAndEvaluations: IQueryable<ApplicationAndEvaluation>
    +Organizations: IQueryable<Organization>
    +Participants: IQueryable<Participant>
    +Payments: IQueryable<Payment>
    +PreviousApplications: IQueryable<PreviousApplication>
    +Programs: IQueryable<Program>
    +ReportAndReclaims: IQueryable<ReportAndReclaim>
    +ScholarshipAndGrants: IQueryable<ScholarshipAndGrant>
    +ReadFile(file: IFormFile): Task
    +GenerateNewDictionary(): void
}

class Repository implements IRepository {
    -context: ApplicationDbContext
    +ApplicationAndEvaluations: IQueryable<ApplicationAndEvaluation>
    +Organizations: IQueryable<Organization>
    +Participants: IQueryable<Participant>
    +Payments: IQueryable<Payment>
    +PreviousApplications: IQueryable<PreviousApplication>
    +Programs: IQueryable<Program>
    +ReportAndReclaims: IQueryable<ReportAndReclaim>
    +ScholarshipAndGrants: IQueryable<ScholarshipAndGrant>
    +ReadFile(file: IFormFile): Task
    +GenerateNewDictionary(): void
}

class ApplicationDbContext {
    -options: DbContextOptions<ApplicationDbContext>
    +ApplicationAndEvaluations: DbSet<ApplicationAndEvaluation>
    +Organizations: DbSet<Organization>
    +Participants: DbSet<Participant>
    +Payments: DbSet<Payment>
    +PreviousApplications: DbSet<PreviousApplication>
    +Programs: DbSet<Program>
    +ReportAndReclaims: DbSet<ReportAndReclaim>
    +ScholarshipAndGrants: DbSet<ScholarshipAndGrant>
}

class DictionarySetup {
    +DictionarySetup()
    +GenerateDictionaryFile(): void
}

class ErrorViewModel {
    - string? RequestId
    - bool ShowRequestId => !string.IsNullOrEmpty(RequestId)
}

class HomeController {
    - IRepository repo
    + HomeController(IRepository)
    + ViewResult Index()
    + Task<IActionResult> LoadData(IFormFile)
    + void Dictionary()
    + IActionResult Error()
    + IActionResult Privacy()
}

class APIController {
    - context: ApplicationDbContext
    - repo: IRepository
    + APIController(context: ApplicationDbContext, repo: IRepository)
    + JsonResult GetDnrAtlasPartnerskap(dnr: string)
    + JsonResult GetPeriodAtlasPartnerskap(fromPeriod: string, toPeriod: string)
    + JsonResult GetDnrAtlasPraktik(dnr: string)
    + JsonResult GetPeriodAtlasPraktik(fromPeriod: string, toPeriod: string)
    + JsonResult GetDnrMobilitetsstatistikMFSStipendier(dnr: string)
    + JsonResult GetPeriodMobilitetsstatistikMFSStipendier(fromPeriod: string, toPeriod: string)
    + JsonResult GetDnrMFSStipendier(dnr: string)
}

APIController -- ApplicationDbContext : uses
APIController -- IRepository : uses
@enduml